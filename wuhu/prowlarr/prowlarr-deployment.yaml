apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: prowlarr-claim0
  name: prowlarr-claim0
  namespace: prowlarr
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: "prowlarr"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -f ./docker-compose.yaml
    kompose.version: 1.28.0 (c4137012e)
  labels:
    io.kompose.service: prowlarr
  name: prowlarr
  namespace: prowlarr
  
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prowlarr
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -f ./docker-compose.yaml
        kompose.version: 1.28.0 (c4137012e)
        linkerd.io/inject: enabled
      labels:
        io.kompose.network/prowlarr-default: "true"
        io.kompose.service: prowlarr
    spec:
      nodeSelector:        
        kubernetes.io/arch: arm64 
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
          image: lscr.io/linuxserver/prowlarr:latest
          name: prowlarr
          ports:
            - containerPort: 9696
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: prowlarr-claim0
      restartPolicy: Always
      volumes:
        - name: prowlarr-claim0
          persistentVolumeClaim:
            claimName: prowlarr-claim0
status: {}
