apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: sealed-secrets
  namespace: kube-system
spec:
  chart: sealed-secrets
  targetNamespace: kube-system
  repo: https://bitnami-labs.github.io/sealed-secrets
  valuesContent: |-
    additionalNamespaces: []
    additionalVolumeMounts: []
    additionalVolumes: []
    affinity: {}
    args: []
    command: []
    commonAnnotations: {}
    commonLabels: {}
    containerSecurityContext:
      capabilities:
        drop:
          - ALL
      enabled: true
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1001
    createController: true
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    dnsPolicy: ''
    extraDeploy: []
    fullnameOverride: 'sealed-secrets-controller'
    hostNetwork: false
    image:
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/sealed-secrets-controller
      tag: 0.27.1
    ingress:
      annotations: {}
      apiVersion: ''
      enabled: false
      extraHosts: []
      extraPaths: []
      extraTls: []
      hostname: sealed-secrets.local
      ingressClassName: ''
      path: /v1/cert.pem
      pathType: ImplementationSpecific
      secrets: []
      selfSigned: false
      tls: false
    keyrenewperiod: ''
    kubeVersion: ''
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 0
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    logFormat: ''
    logInfoStdout: false
    logLevel: ''
    metrics:
      dashboards:
        annotations: {}
        create: false
        labels: {}
        namespace: ''
      service:
        annotations: {}
        loadBalancerClass: ''
        nodePort: ''
        port: 8081
        type: ClusterIP
      serviceMonitor:
        annotations: {}
        enabled: false
        honorLabels: true
        interval: ''
        labels: {}
        metricRelabelings: []
        namespace: ''
        relabelings: []
        scrapeTimeout: ''
    nameOverride: ''
    namespace: ''
    networkPolicy:
      egress:
        enabled: false
        kubeapiCidr: ''
        kubeapiPort: ''
      enabled: false
    nodeSelector: {}
    pdb:
      create: false
      maxUnavailable: ''
      minAvailable: 1
    podAnnotations: {}
    podLabels: {}
    podSecurityContext:
      enabled: true
      fsGroup: 65534
    priorityClassName: ''
    privateKeyAnnotations: {}
    privateKeyLabels: {}
    rateLimit: ''
    rateLimitBurst: ''
    rbac:
      clusterRole: true
      clusterRoleName: secrets-unsealer
      create: true
      labels: {}
      namespacedRoles: false
      namespacedRolesName: secrets-unsealer
      pspEnabled: false
      serviceProxier:
        bind: true
        create: true
        subjects: |
          - apiGroup: rbac.authorization.k8s.io
            kind: Group
            name: system:authenticated
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 0
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits: {}
      requests: {}
    revisionHistoryLimit: ''
    runtimeClassName: ''
    secretName: sealed-secrets-key
    service:
      annotations: {}
      loadBalancerClass: ''
      nodePort: ''
      port: 8080
      type: ClusterIP
    serviceAccount:
      annotations: {}
      create: true
      labels: {}
      name: ''
    skipRecreate: false
    startupProbe:
      enabled: false
      failureThreshold: 3
      initialDelaySeconds: 0
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    tolerations: []
    updateStatus: true
