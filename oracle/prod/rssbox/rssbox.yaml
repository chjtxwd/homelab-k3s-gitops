apiVersion: apps/v1
kind: Deployment
metadata:
  name: rssbox
  namespace: rssbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rssbox
  template:
    metadata:
      labels:
        app: rssbox
    spec:
      containers:
      - name: rssbox
        image: versun/rssbox
        ports:
        - containerPort: 8000
        env:
        - name: SITE_URL
          value: "http://127.0.0.1:8000"
        - name: REDIS_URL
          value: "redis://rssbox-redis:6379/0"
        - name: CSRF_TRUSTED_ORIGINS
          value: "http://127.0.0.1:8000"
        - name: DEFAULT_TARGET_LANGUAGE
          value: "Chinese Simplified"
        - name: PORT
          value: "8000"
        - name: DEBUG
          value: "0"
        - name: DEMO
          value: "0"
        - name: USER_MANAGEMENT
          value: "0"
        - name: LOG_LEVEL
          value: "ERROR"
        - name: default_max_posts
          value: "20"
        volumeMounts:
        - name: rssbox-data
          mountPath: /app/data
        livenessProbe:
          exec:
            command: 
            - sh
            - -c
            - python -c "import redis,os; r=redis.Redis.from_url(os.getenv('REDIS_URL')); r.ping()"
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        readinessProbe:
          exec:
            command: 
            - sh
            - -c
            - python -c "import redis,os; r=redis.Redis.from_url(os.getenv('REDIS_URL')); r.ping()"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: rssbox-data
        persistentVolumeClaim:
          claimName: rssbox-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rssbox
  namespace: rssbox
spec:
  selector:
    app: rssbox
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP