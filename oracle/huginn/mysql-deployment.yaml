apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -f ./docker-compose.yml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -f ./docker-compose.yml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/huginn-default: "true"
        io.kompose.service: mysql
    spec:
      containers:
        - env:
            - name: HUGINN_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_NAME
                  name: tmp-mysql-env
            - name: HUGINN_DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_PASSWORD
                  name: tmp-mysql-env
            - name: HUGINN_DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_USERNAME
                  name: tmp-mysql-env
            - name: MYSQL_PORT_3306_TCP_ADDR
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_PORT_3306_TCP_ADDR
                  name: tmp-mysql-env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: tmp-mysql-env
          image: mysql:5.7
          name: mysql
          resources: {}
      restartPolicy: Always
status: {}
